import { GridRowId } from '@mui/x-data-grid';
import { GridStatePremium } from "../../../models/gridStatePremium.js";
import { GridAggregationPosition } from "./gridAggregationInterfaces.js";
export declare const gridAggregationStateSelector: import("@mui/x-data-grid").OutputSelector<GridStatePremium, unknown, import("./gridAggregationInterfaces.js").GridAggregationState>;
/**
 * Get the aggregation model, containing the aggregation function of each column.
 * If a column is not in the model, it is not aggregated.
 * @category Aggregation
 */
export declare const gridAggregationModelSelector: import("@mui/x-data-grid").OutputSelector<GridStatePremium, import("./gridAggregationInterfaces.js").GridAggregationState, import("./gridAggregationInterfaces.js").GridAggregationModel>;
/**
 * Get the aggregation results as a lookup.
 * @category Aggregation
 */
export declare const gridAggregationLookupSelector: import("@mui/x-data-grid").OutputSelector<GridStatePremium, import("./gridAggregationInterfaces.js").GridAggregationState, import("./gridAggregationInterfaces.js").GridAggregationLookup>;
export declare const gridCellAggregationResultSelector: import("@mui/x-data-grid").OutputSelector<GridStatePremium, {
  id: GridRowId;
  field: string;
}, {
  position: GridAggregationPosition;
  value: any;
} | null>;