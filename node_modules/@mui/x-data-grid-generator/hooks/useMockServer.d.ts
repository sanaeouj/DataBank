import { type GridGetRowsResponse, type GridRowId, type GridRowModel, type GridColDef, type GridInitialState } from '@mui/x-data-grid-premium';
import { AddPathToDemoDataOptions } from "../services/tree-data-generator.js";
import type { ServerOptions } from "./serverUtils.js";
export declare const BASE_URL = "https://mui.com/x/api/data-grid";
type UseMockServerResponse<T> = {
  columns: GridColDef[];
  initialState: GridInitialState;
  getGroupKey?: (row: GridRowModel) => string;
  getChildrenCount?: (row: GridRowModel) => number;
  fetchRows: (url: string) => Promise<T>;
  editRow: (rowId: GridRowId, updatedRow: GridRowModel) => Promise<GridRowModel>;
  loadNewData: () => void;
  isReady: boolean;
};
type DataSet = 'Commodity' | 'Employee' | 'Movies';
interface UseMockServerOptions {
  dataSet: DataSet;
  /**
   * Has no effect when DataSet='Movies'
   */
  rowLength: number;
  maxColumns?: number;
  visibleFields?: string[];
  editable?: boolean;
  treeData?: AddPathToDemoDataOptions;
  rowGrouping?: boolean;
}
export declare const useMockServer: <T extends GridGetRowsResponse>(dataSetOptions?: Partial<UseMockServerOptions>, serverOptions?: ServerOptions & {
  verbose?: boolean;
}, shouldRequestsFail?: boolean) => UseMockServerResponse<T>;
export {};